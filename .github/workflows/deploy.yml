name: Deploy to GitHub Pages

on:
  # Runs on pushes targeting the main branch
  push:
    branches: ["main"]
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Build site structure
        run: |
          # Create a _site directory for GitHub Pages
          mkdir -p _site
          
          # Copy all site_* directories to _site
          for site in site_*/; do
            if [ -d "$site" ]; then
              site_name="${site%/}"
              site_name="${site_name#site_}"
              echo "Copying $site to _site/$site_name"
              cp -r "$site" "_site/$site_name"
            fi
          done
          
          # Create an index.html that lists all sites
          cat > _site/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Figma-to-Production Sites</title>
              <style>
                  * { margin: 0; padding: 0; box-sizing: border-box; }
                  body {
                      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
                      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                      min-height: 100vh;
                      display: flex;
                      align-items: center;
                      justify-content: center;
                      padding: 2rem;
                  }
                  .container {
                      max-width: 800px;
                      background: white;
                      border-radius: 20px;
                      padding: 3rem;
                      box-shadow: 0 20px 60px rgba(0,0,0,0.3);
                  }
                  h1 {
                      color: #333;
                      margin-bottom: 1rem;
                      font-size: 2.5rem;
                  }
                  .subtitle {
                      color: #666;
                      margin-bottom: 2rem;
                      font-size: 1.1rem;
                  }
                  .sites-list {
                      list-style: none;
                  }
                  .site-item {
                      margin-bottom: 1rem;
                  }
                  .site-link {
                      display: block;
                      padding: 1.5rem;
                      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                      color: white;
                      text-decoration: none;
                      border-radius: 10px;
                      transition: transform 0.2s, box-shadow 0.2s;
                      font-weight: 600;
                  }
                  .site-link:hover {
                      transform: translateY(-2px);
                      box-shadow: 0 10px 30px rgba(102, 126, 234, 0.4);
                  }
                  .footer {
                      margin-top: 2rem;
                      padding-top: 2rem;
                      border-top: 2px solid #eee;
                      color: #999;
                      font-size: 0.9rem;
                      text-align: center;
                  }
                  .badge {
                      display: inline-block;
                      padding: 0.25rem 0.75rem;
                      background: #667eea;
                      color: white;
                      border-radius: 20px;
                      font-size: 0.85rem;
                      margin-left: 0.5rem;
                  }
              </style>
          </head>
          <body>
              <div class="container">
                  <h1>ðŸŽ¨ Figma-to-Production</h1>
                  <p class="subtitle">Landing pages generated from Figma designs via MCP</p>
                  
                  <ul class="sites-list" id="sites-list">
                      <!-- Sites will be inserted here -->
                  </ul>
                  
                  <div class="footer">
                      <p>Generated from Figma designs â€¢ Powered by MCP</p>
                  </div>
              </div>
              
              <script>
                  // Auto-discover sites
                  const sites = [
          EOF
          
          # Add each site to the list
          first=true
          for site in site_*/; do
            if [ -d "$site" ]; then
              site_name="${site%/}"
              site_name="${site_name#site_}"
              if [ "$first" = true ]; then
                first=false
              else
                echo "," >> _site/index.html
              fi
              echo "            { name: '$site_name', path: '$site_name/' }" >> _site/index.html
            fi
          done
          
          cat >> _site/index.html << 'EOF'
                  ];
                  
                  const sitesList = document.getElementById('sites-list');
                  sites.forEach(site => {
                      const li = document.createElement('li');
                      li.className = 'site-item';
                      const formattedName = site.name
                          .split('-')
                          .map(word => word.charAt(0).toUpperCase() + word.slice(1))
                          .join(' ');
                      li.innerHTML = `
                          <a href="${site.path}" class="site-link">
                              ${formattedName}
                              <span class="badge">View Site</span>
                          </a>
                      `;
                      sitesList.appendChild(li);
                  });
              </script>
          </body>
          </html>
          EOF
          
          echo "Build complete! Sites ready for deployment."
          ls -la _site/
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
