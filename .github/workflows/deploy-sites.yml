name: Deploy Sites

on:
  push:
    paths:
      - 'sites/**'
  workflow_dispatch:

jobs:
  discover:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.collect.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Collect deployable sites
        id: collect
        run: |
          set -e
          [ -d sites ] || { echo "matrix=[]" >> $GITHUB_OUTPUT; exit 0; }
          arr="[]"
          for d in $(ls -1 sites); do
            cfg="sites/$d/site-config.json"
            [ -f "$cfg" ] || continue
            # forÃ§a string para comparar
            deploy=$(jq -r '.deploy | tostring' "$cfg")
            name=$(jq -r '.name // "'"$d"'"' "$cfg")
            if [ "$deploy" = "true" ]; then
              arr=$(echo "$arr" | jq --arg n "$name" '. + [$n]')
            else
              echo "Skip $name (deploy=$deploy)"
            fi
          done
          compact=$(echo "$arr" | jq -c '.')
          echo "Final matrix: $compact"
          echo "matrix=$compact" >> $GITHUB_OUTPUT

  deploy:
    needs: discover
    if: ${{ needs.discover.outputs.matrix != '[]' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        site: ${{ fromJson(needs.discover.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Derive secret name
        id: secret
        run: |
          RAW="${{ matrix.site }}"
          SANITIZED=$(echo "$RAW" | tr '[:lower:]' '[:upper:]' | tr '-' '_' )
          echo "secret_name=AZURE_STATIC_WEB_APPS_API_TOKEN_${SANITIZED}" >> $GITHUB_OUTPUT
          echo "Using secret: AZURE_STATIC_WEB_APPS_API_TOKEN_${SANITIZED}"

      - name: Validate site contents
        run: |
          P="sites/${{ matrix.site }}"
          [ -d "$P" ] || { echo "Dir ausente: $P"; exit 1; }
          [ -f "$P/index.html" ] || { echo "index.html ausente em $P"; ls -R "$P"; exit 1; }
          echo "OK: $P/index.html"
          find "$P" -maxdepth 2 -type f -name "*.html"

      - name: Deploy (${{ matrix.site }})
        uses: Azure/static-web-apps-deploy@v1
        with:
          action: upload
          app_location: sites/${{ matrix.site }}
          skip_api_build: true
          azure_static_web_apps_api_token: ${{ secrets[steps.secret.outputs.secret_name] }}
